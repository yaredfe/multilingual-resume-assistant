# Use a different base image with better network handling
FROM python:3.11-slim-bullseye

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    wget \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set pip configuration for better reliability
ENV PIP_TIMEOUT=600
ENV PIP_RETRIES=5
ENV PIP_DEFAULT_TIMEOUT=600

# Copy requirements first for better caching
COPY requirements-docker.txt .

# Install Python dependencies with better error handling
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# Install packages with retry logic
RUN pip install --no-cache-dir --timeout 600 --retries 5 fastapi uvicorn python-multipart
RUN pip install --no-cache-dir --timeout 600 --retries 5 numpy pandas scikit-learn
RUN pip install --no-cache-dir --timeout 600 --retries 5 transformers sentence-transformers
RUN pip install --no-cache-dir --timeout 600 --retries 5 torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
RUN pip install --no-cache-dir --timeout 600 --retries 5 spacy
RUN pip install --no-cache-dir --timeout 600 --retries 5 chromadb duckdb
RUN pip install --no-cache-dir --timeout 600 --retries 5 PyPDF2 python-dotenv requests

# Copy the entire application
COPY . .

# Create static directory
RUN mkdir -p static

# Create data directories
RUN mkdir -p data/resumes data/parsed data/chroma_db data/translated data/match_results data/interview_questions

# Download spaCy model
RUN python -m spacy download en_core_web_sm

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/api/health || exit 1

# Run the application
CMD ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000"] 